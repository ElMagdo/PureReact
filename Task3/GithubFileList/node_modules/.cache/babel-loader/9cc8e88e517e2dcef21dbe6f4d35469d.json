{"ast":null,"code":"var _jsxFileName = \"/home/el/Desktop/commits/PureReact/Task3/GithubFileList/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FileList({\n  files\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-list\",\n    children: files.map(file => /*#__PURE__*/_jsxDEV(FileListItem, {\n      file: file\n    }, file.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 32\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = FileList;\nFileList.propTypes = {\n  files: PropTypes.array\n};\nconst testFiles = [{\n  id: 1,\n  name: 'build',\n  type: 'folder',\n  updated_at: \"2016-07-11 21:24:00\",\n  latestCommit: {\n    message: 'Close #1687, replace es3ify with Babel ES3 tranforms (#1688)'\n  }\n}, {\n  id: 2,\n  name: 'docs',\n  type: 'folder',\n  updated_at: \"2016-07-11 21:24:00\",\n  latestCommit: {\n    message: 'Mention that we\\'re Observable in the API.'\n  }\n}, {\n  id: 3,\n  name: 'examples',\n  type: 'folder',\n  updated_at: \"2016-07-18 21:24:00\",\n  latestCommit: {\n    message: 'Update doc to test with Enzyme (#1692)'\n  }\n}, {\n  id: 4,\n  name: 'logos',\n  type: 'folder',\n  updated_at: \"2016-07-18 21:24:00\",\n  latestCommit: {\n    message: 'Use Redux logo as favicon on GitBook docs (#1761)'\n  }\n}, {\n  id: 5,\n  name: 'src',\n  type: 'folder',\n  updated_at: \"2016-07-18 21:24:00\",\n  latestCommit: {\n    message: 'Only warn for unexpected once per key (#1818)'\n  }\n}, {\n  id: 6,\n  name: 'test',\n  type: 'folder',\n  updated_at: \"2016-07-18 21:24:00\",\n  latestCommit: {\n    message: 'Only warn for unexpected once per key (#1818)'\n  }\n}, {\n  id: 7,\n  name: '.babelrc',\n  type: 'file',\n  updated_at: \"2016-07-18 21:24:00\",\n  latestCommit: {\n    message: 'Close #1687, replace es3ify with Babel ES3 tranforms (#1688)'\n  }\n}, {\n  id: 8,\n  name: '.editorconfig',\n  type: 'file',\n  updated_at: \"2016-07-18 21:24:00\",\n  latestCommit: {\n    message: 'editorconfig: do not trim trailing spaces in Markdown files'\n  }\n}, {\n  id: 9,\n  name: '.eslintignore',\n  type: 'file',\n  updated_at: \"2016-07-18 21:24:00\",\n  latestCommit: {\n    message: 'Really ignore all node_modules and dist in eslint.'\n  }\n}, {\n  id: 10,\n  name: '.eslintrc',\n  type: 'file',\n  updated_at: \"2016-07-18 21:24:00\",\n  latestCommit: {\n    message: 'Bump eslint version'\n  }\n}, {\n  id: 11,\n  name: '.flowconfig',\n  type: 'file',\n  updated_at: \"2016-07-18 21:24:00\",\n  latestCommit: {\n    message: 'Add Flow type annotations'\n  }\n}];\n\nlet FileListItem = ({\n  file\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"item\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"left\",\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      type: file.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Name, {\n      name: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Message, {\n    commit: file.latestCommit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 121,\n  columnNumber: 5\n}, this);\n\n_c2 = FileListItem;\nFileListItem.propTypes = {\n  file: PropTypes.object.isRequired\n};\n\nfunction Icon({\n  type\n}) {\n  let icon = type === \"folder\" ? \"fa-folder\" : \"fa-file-text-o\";\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"icon\",\n    children: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: `fa ${icon}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 35\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 12\n  }, this);\n}\n\n_c3 = Icon;\nIcon.propTypes = {\n  type: PropTypes.string.isRequired\n};\n\nlet Name = ({\n  name\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"name\",\n  children: name\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 144,\n  columnNumber: 24\n}, this);\n\n_c4 = Name;\nName.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nlet Message = ({\n  commit\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"commit-msg\",\n  children: commit\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 150,\n  columnNumber: 29\n}, this);\n\n_c5 = Message;\nMessage.propTypes = {\n  commit: PropTypes.string.isRequired\n};\n\nconst Time = ({\n  time\n}) => {\n  const timeString = time; //moment(time).fromNow();\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"time\",\n    children: timeString\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 11\n  }, this);\n};\n\n_c6 = Time;\nTime.propTypes = {\n  time: PropTypes.string.isRequired\n};\nReactDOM.render( /*#__PURE__*/_jsxDEV(FileList, {\n  files: testFiles\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 166,\n  columnNumber: 5\n}, this), document.querySelector(\"#root\"));\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"FileList\");\n$RefreshReg$(_c2, \"FileListItem\");\n$RefreshReg$(_c3, \"Icon\");\n$RefreshReg$(_c4, \"Name\");\n$RefreshReg$(_c5, \"Message\");\n$RefreshReg$(_c6, \"Time\");","map":{"version":3,"sources":["/home/el/Desktop/commits/PureReact/Task3/GithubFileList/src/index.js"],"names":["React","ReactDOM","PropTypes","FileList","files","map","file","id","propTypes","array","testFiles","name","type","updated_at","latestCommit","message","FileListItem","object","isRequired","Icon","icon","string","Name","Message","commit","Time","time","timeString","render","document","querySelector"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport 'font-awesome/css/font-awesome.min.css'\n\nfunction FileList({files}) {\n    return (\n        <div className=\"file-list\">\n            {files.map(file => <FileListItem key={file.id} file={file}/> )}\n        </div>\n    );\n}\n\nFileList.propTypes = {\n    files: PropTypes.array\n};\n\nconst testFiles = [{\n    id: 1,\n    name: 'build',\n    type: 'folder',\n    updated_at: \"2016-07-11 21:24:00\",\n    latestCommit: {\n        message: 'Close #1687, replace es3ify with Babel ES3 tranforms (#1688)'\n    }\n},\n{\n    id: 2,\n    name: 'docs',\n    type: 'folder',\n    updated_at: \"2016-07-11 21:24:00\",\n    latestCommit: {\n        message: 'Mention that we\\'re Observable in the API.'\n    }\n},\n{\n    id: 3,\n    name: 'examples',\n    type: 'folder',\n    updated_at: \"2016-07-18 21:24:00\",\n    latestCommit: {\n        message: 'Update doc to test with Enzyme (#1692)'\n    }\n},\n{\n    id: 4,\n    name: 'logos',\n    type: 'folder',\n    updated_at: \"2016-07-18 21:24:00\",\n    latestCommit: {\n        message: 'Use Redux logo as favicon on GitBook docs (#1761)'\n    }\n},\n{\n    id: 5,\n    name: 'src',\n    type: 'folder',\n    updated_at: \"2016-07-18 21:24:00\",\n    latestCommit: {\n        message: 'Only warn for unexpected once per key (#1818)'\n    }\n},\n{\n    id: 6,\n    name: 'test',\n    type: 'folder',\n    updated_at: \"2016-07-18 21:24:00\",\n    latestCommit: {\n        message: 'Only warn for unexpected once per key (#1818)'\n    }\n},\n{\n    id: 7,\n    name: '.babelrc',\n    type: 'file',\n    updated_at: \"2016-07-18 21:24:00\",\n    latestCommit: {\n        message: 'Close #1687, replace es3ify with Babel ES3 tranforms (#1688)'\n    }\n},\n{\n    id: 8,\n    name: '.editorconfig',\n    type: 'file',\n    updated_at: \"2016-07-18 21:24:00\",\n    latestCommit: {\n        message: 'editorconfig: do not trim trailing spaces in Markdown files'\n    }\n},\n{\n    id: 9,\n    name: '.eslintignore',\n    type: 'file',\n    updated_at: \"2016-07-18 21:24:00\",\n    latestCommit: {\n        message: 'Really ignore all node_modules and dist in eslint.'\n    }\n},\n{\n    id: 10,\n    name: '.eslintrc',\n    type: 'file',\n    updated_at: \"2016-07-18 21:24:00\",\n    latestCommit: {\n        message: 'Bump eslint version'\n    }\n},\n{\n    id: 11,\n    name: '.flowconfig',\n    type: 'file',\n    updated_at: \"2016-07-18 21:24:00\",\n    latestCommit: {\n        message: 'Add Flow type annotations'\n    }\n},\n];\n\nlet FileListItem = ({file}) => (\n    <div className=\"item\">\n        <div className=\"left\">\n            <Icon type={file.type}/>\n            <Name name={file.name}/>\n        </div>\n        <Message commit={file.latestCommit}/>\n    </div>\n);\n\nFileListItem.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nfunction Icon({type}) {\n    let icon = (type === \"folder\") ? \"fa-folder\" : \"fa-file-text-o\";\n\n    return <span className=\"icon\"><i className={`fa ${icon}`}/></span>;\n}\n\nIcon.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nlet Name = ({name}) => <span className=\"name\">{name}</span>;\n\nName.propTypes = {\n    name: PropTypes.string.isRequired\n}\n\nlet Message = ({commit}) => <div className=\"commit-msg\">{commit}</div>;\n\nMessage.propTypes = {\n    commit: PropTypes.string.isRequired\n}\n\nconst Time = ({ time }) => {\n  const timeString = time;//moment(time).fromNow();\n  return (<span className=\"time\">{timeString}</span>);\n};\n\nTime.propTypes = {\n    time: PropTypes.string.isRequired\n}\n\nReactDOM.render(\n    <FileList files={testFiles}/>,\n    document.querySelector(\"#root\")\n);"]},"metadata":{},"sourceType":"module"}